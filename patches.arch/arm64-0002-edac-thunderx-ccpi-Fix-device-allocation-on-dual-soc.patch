From 5d3da7ef3f1d6f0de9165cca596f7509836100fb Mon Sep 17 00:00:00 2001
From: Robert Richter <rrichter@cavium.com>
Date: Fri, 23 Oct 2015 12:02:56 +0200
Subject: [PATCH 2/2] edac: thunderx: ccpi: Fix device allocation on dual
 socket system
Git-commit: 5d3da7ef3f1d6f0de9165cca596f7509836100fb
Patch-mainline: Never, this is a local fix-up until the driver is accepted

Fixing device allocation on dual socket system which fail with:

 thunderx_ocx_edac 0000:01:00.5: OCX_COM_LINK_INT[2]: 0000000000000000
 sysfs: cannot create duplicate filename '/devices/system/edac/OCX'

Each node has it's own edac device instance. We need to enumerate
sysfs entries per socket by adding an index. So we will have OCX<idx>
depending on the node.

Signed-off-by: Robert Richter <rrichter@cavium.com>
Signed-off-by: Matthias Brugger <mbrugger@suse.com>

---
 drivers/edac/thunderx_edac-ccpi.c | 12 ++++++++----
 1 file changed, 8 insertions(+), 4 deletions(-)

diff --git a/drivers/edac/thunderx_edac-ccpi.c b/drivers/edac/thunderx_edac-ccpi.c
index fc3e163..0de6eee 100644
--- a/drivers/edac/thunderx_edac-ccpi.c
+++ b/drivers/edac/thunderx_edac-ccpi.c
@@ -218,14 +218,18 @@ static int thunderx_ocx_probe(struct pci_dev *pdev,
 {
 	struct thunderx_ocx *ocx;
 	struct edac_device_ctl_info *edac_dev;
-	int err = 0, i;
+	char name[6];
+	int idx;
+	int i;
+	int err = -ENOMEM;
 
+	idx = edac_device_alloc_index();
+	snprintf(name, sizeof(name), "OCX%d", idx);
 	edac_dev = edac_device_alloc_ctl_info(sizeof(struct thunderx_ocx),
-					      "OCX", 1, "CCPI", 1, 0, NULL, 0,
-					      edac_device_alloc_index());
+					name, 1, "CCPI", 1, 0, NULL, 0, idx);
 	if (!edac_dev) {
 		dev_err(&pdev->dev, "Cannot allocate EDAC device: %d\n", err);
-		return -ENOMEM;
+		return err;
 	}
 
 	err = pcim_enable_device(pdev);
-- 
2.1.4

