From 5681952ff24b7a51c6e972e42875869517237137 Mon Sep 17 00:00:00 2001
From: Robert Richter <rrichter@cavium.com>
Date: Fri, 23 Oct 2015 10:12:18 +0200
Subject: [PATCH 1/2] edac: thunderx: lmc: Fix device allocation on dual socket
 system
Git-commit: 5681952ff24b7a51c6e972e42875869517237137
Patch-mainline: Never, this is a local fix-up until the driver is accepted

Fix device allocation on dual socket system:

 thunderx_lmc_edac 0004:01:0a.0: Cannot add the MC: -22
 thunderx_lmc_edac: probe of 0004:01:0a.0 failed with error -22

Allocation of node 1 devices fails since there are already devices
with the same index from node 0.

Each node has it's own edac devices and there can be multiple
instances. We need to ensure there is a unique device index on
multisocket systems. There are multiple pci domains on multi node
systems. Thus, fixing the allocation by using a unique index that is
derived from the domain number too.

Signed-off-by: Robert Richter <rrichter@cavium.com>
Signed-off-by: Matthias Brugger <mbrugger@suse.com>

---
 drivers/edac/thunderx_edac-lmc.c | 11 ++++++++++-
 1 file changed, 10 insertions(+), 1 deletion(-)

diff --git a/drivers/edac/thunderx_edac-lmc.c b/drivers/edac/thunderx_edac-lmc.c
index e1486af..9b5d7ea 100644
--- a/drivers/edac/thunderx_edac-lmc.c
+++ b/drivers/edac/thunderx_edac-lmc.c
@@ -346,6 +346,15 @@ static const struct pci_device_id thunderx_lmc_pci_tbl[] = {
 	{ 0, },
 };
 
+/*
+ * Per domain mappings (up to 4 domains):
+ *
+ *  domain 1: 0..3
+ *  domain 4: 4..7
+ */
+#define pci_dev_to_mc_idx(dev)	\
+	((pci_domain_nr((dev)->bus) & 6) | PCI_FUNC((dev)->devfn))
+
 static int thunderx_lmc_probe(struct pci_dev *pdev,
 				const struct pci_device_id *id)
 {
@@ -360,7 +369,7 @@ static int thunderx_lmc_probe(struct pci_dev *pdev,
 	layer.size = 2;
 	layer.is_virt_csrow = false;
 
-	mci = edac_mc_alloc(PCI_FUNC(pdev->devfn), 1, &layer,
+	mci = edac_mc_alloc(pci_dev_to_mc_idx(pdev), 1, &layer,
 			    sizeof(struct thunderx_lmc));
 	if (!mci)
 		return -ENOMEM;
-- 
2.1.4

