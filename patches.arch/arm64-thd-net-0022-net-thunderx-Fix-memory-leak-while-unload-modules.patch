From 48ae805ce8ba51770f1f4d91808f63ddafc8f847 Mon Sep 17 00:00:00 2001
From: Thanneeru Srinivasulu <tsrinivasulu@caviumnetworks.com>
Date: Wed, 18 Nov 2015 11:03:56 +0530
Subject: [PATCH 12/23] net, thunderx: Fix memory leak while unload modules.
Patch-mainline: Not yet, needs submission

Free iomap memory while removing modules.

Signed-off-by: Srinivasulu <tsrinivasulu@caviumnetworks.com>
Signed-off-by: Robert Richter <rrichter@cavium.com>
Signed-off-by: Matthias Brugger <mbrugger@suse.com>

---
 drivers/net/ethernet/cavium/thunder/nic_main.c    | 5 ++++-
 drivers/net/ethernet/cavium/thunder/nicvf_main.c  | 6 +++++-
 drivers/net/ethernet/cavium/thunder/thunder_bgx.c | 6 +++++-
 3 files changed, 14 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/cavium/thunder/nic_main.c b/drivers/net/ethernet/cavium/thunder/nic_main.c
index f041b72..5121ca5 100644
--- a/drivers/net/ethernet/cavium/thunder/nic_main.c
+++ b/drivers/net/ethernet/cavium/thunder/nic_main.c
@@ -1029,7 +1029,8 @@ static int nic_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 	}
 
 	/* MAP PF's configuration registers */
-	nic->reg_base = pcim_iomap(pdev, PCI_CFG_REG_BAR_NUM, 0);
+	nic->reg_base = ioremap(pci_resource_start(pdev, 0),
+			pci_resource_len(pdev, 0));
 	if (!nic->reg_base) {
 		dev_err(dev, "Cannot map config register space, aborting\n");
 		err = -ENOMEM;
@@ -1096,6 +1097,8 @@ static void nic_remove(struct pci_dev *pdev)
 		destroy_workqueue(nic->check_link);
 	}
 
+	if (nic->reg_base)
+		iounmap(nic->reg_base);
 	nic_unregister_interrupts(nic);
 	pci_release_regions(pdev);
 	pci_disable_device(pdev);
diff --git a/drivers/net/ethernet/cavium/thunder/nicvf_main.c b/drivers/net/ethernet/cavium/thunder/nicvf_main.c
index accf488..db5b5f0 100644
--- a/drivers/net/ethernet/cavium/thunder/nicvf_main.c
+++ b/drivers/net/ethernet/cavium/thunder/nicvf_main.c
@@ -1514,7 +1514,8 @@ static int nicvf_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 	nic->max_queues = qcount;
 
 	/* MAP VF's configuration registers */
-	nic->reg_base = pcim_iomap(pdev, PCI_CFG_REG_BAR_NUM, 0);
+	nic->reg_base = ioremap(pci_resource_start(pdev, 0),
+			pci_resource_len(pdev, 0));
 	if (!nic->reg_base) {
 		dev_err(dev, "Cannot map config register space, aborting\n");
 		err = -ENOMEM;
@@ -1601,6 +1602,9 @@ static void nicvf_remove(struct pci_dev *pdev)
 		unregister_netdev(pnetdev);
 	nicvf_unregister_interrupts(nic);
 	pci_set_drvdata(pdev, NULL);
+
+	if (nic->reg_base)
+		iounmap(nic->reg_base);
 	if (nic->qs)
 		devm_kfree(&pdev->dev, nic->qs);
 	free_netdev(netdev);
diff --git a/drivers/net/ethernet/cavium/thunder/thunder_bgx.c b/drivers/net/ethernet/cavium/thunder/thunder_bgx.c
index 84c6ad2..4f03ff3 100644
--- a/drivers/net/ethernet/cavium/thunder/thunder_bgx.c
+++ b/drivers/net/ethernet/cavium/thunder/thunder_bgx.c
@@ -1076,7 +1076,8 @@ static int bgx_probe(struct pci_dev *pdev, const struct pci_device_id *ent)
 	}
 
 	/* MAP configuration registers */
-	bgx->reg_base = pcim_iomap(pdev, PCI_CFG_REG_BAR_NUM, 0);
+	bgx->reg_base = ioremap(pci_resource_start(pdev, 0),
+			pci_resource_len(pdev, 0));
 	if (!bgx->reg_base) {
 		dev_err(dev, "BGX: Cannot map CSR memory space, aborting\n");
 		err = -ENOMEM;
@@ -1126,6 +1127,9 @@ static void bgx_remove(struct pci_dev *pdev)
 		bgx_lmac_disable(bgx, lmac);
 
 	bgx_vnic[bgx->bgx_id] = NULL;
+
+	if (bgx->reg_base)
+		iounmap(bgx->reg_base);
 	pci_release_regions(pdev);
 	pci_disable_device(pdev);
 	pci_set_drvdata(pdev, NULL);
-- 
2.1.4

