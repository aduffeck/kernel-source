From: Takashi Iwai <tiwai@suse.de>
Subject: kABI fixes for linux-4.1.15
Patch-mainline: Never, SUSE only

Fixes kABI just by papering over / shuffling new struct fields.

Signed-off-by: Takashi Iwai <tiwai@suse.de>

---
 include/linux/ipv6.h  |    4 ++++
 include/net/af_unix.h |    2 ++
 include/net/ipv6.h    |    8 ++++++--
 3 files changed, 12 insertions(+), 2 deletions(-)

--- a/include/linux/ipv6.h
+++ b/include/linux/ipv6.h
@@ -224,7 +224,11 @@ struct ipv6_pinfo {
 	struct ipv6_ac_socklist	*ipv6_ac_list;
 	struct ipv6_fl_socklist __rcu *ipv6_fl_list;
 
+#ifdef __GENKSYMS__
+	struct ipv6_txoptions	*opt;
+#else
 	struct ipv6_txoptions __rcu	*opt;
+#endif
 	struct sk_buff		*pktoptions;
 	struct sk_buff		*rxpmtu;
 	struct inet6_cork	cork;
--- a/include/net/af_unix.h
+++ b/include/net/af_unix.h
@@ -63,7 +63,9 @@ struct unix_sock {
 #define UNIX_GC_CANDIDATE	0
 #define UNIX_GC_MAYBE_CYCLE	1
 	struct socket_wq	peer_wq;
+#ifndef __GENKSYMS__
 	wait_queue_t		peer_wake;
+#endif
 };
 
 static inline struct unix_sock *unix_sk(struct sock *sk)
--- a/include/net/ipv6.h
+++ b/include/net/ipv6.h
@@ -205,7 +205,6 @@ extern rwlock_t ip6_ra_lock;
  */
 
 struct ipv6_txoptions {
-	atomic_t		refcnt;
 	/* Length of this structure */
 	int			tot_len;
 
@@ -218,7 +217,10 @@ struct ipv6_txoptions {
 	struct ipv6_opt_hdr	*dst0opt;
 	struct ipv6_rt_hdr	*srcrt;	/* Routing Header */
 	struct ipv6_opt_hdr	*dst1opt;
+#ifndef __GENKSYMS__
+	atomic_t		refcnt;
 	struct rcu_head		rcu;
+#endif
 	/* Option buffer, as read by IPV6_PKTOPTIONS, starts here. */
 };
 
@@ -507,8 +509,10 @@ struct ip6_create_arg {
 	u32 user;
 	const struct in6_addr *src;
 	const struct in6_addr *dst;
-	int iif;
 	u8 ecn;
+#ifndef __GENKSYMS__
+	int iif;
+#endif
 };
 
 void ip6_frag_init(struct inet_frag_queue *q, const void *a);
